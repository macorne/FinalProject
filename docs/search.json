[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "FinalProjectEDA",
    "section": "",
    "text": "We will explore the Centers for Disease Control and Prevention (CDC) Behavioral Risk Factor Surveillance System (BRFSS) data set of diabetes binary health indicators from 2015. Two questions that we would like to address in this exploratory data analysis:\n\nWhich factors are most predictive of diabetes risk?\nCan we use a subset of the risk factors to accurately predict whether an individual has diabetes?"
  },
  {
    "objectID": "EDA.html#introduction",
    "href": "EDA.html#introduction",
    "title": "FinalProjectEDA",
    "section": "",
    "text": "We will explore the Centers for Disease Control and Prevention (CDC) Behavioral Risk Factor Surveillance System (BRFSS) data set of diabetes binary health indicators from 2015. Two questions that we would like to address in this exploratory data analysis:\n\nWhich factors are most predictive of diabetes risk?\nCan we use a subset of the risk factors to accurately predict whether an individual has diabetes?"
  },
  {
    "objectID": "EDA.html#read-in-the-data",
    "href": "EDA.html#read-in-the-data",
    "title": "FinalProjectEDA",
    "section": "Read In The Data",
    "text": "Read In The Data\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.6     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(vroom)\n\n\nAttaching package: 'vroom'\n\nThe following object is masked from 'package:yardstick':\n\n    spec\n\nThe following object is masked from 'package:scales':\n\n    col_factor\n\nThe following objects are masked from 'package:readr':\n\n    as.col_spec, col_character, col_date, col_datetime, col_double,\n    col_factor, col_guess, col_integer, col_logical, col_number,\n    col_skip, col_time, cols, cols_condense, cols_only, date_names,\n    date_names_lang, date_names_langs, default_locale, fwf_cols,\n    fwf_empty, fwf_positions, fwf_widths, locale, output_column,\n    problems, spec\n\n#diabetes_binary_health_indicators_BRFSS2015.csv\n\ndata &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;"
  },
  {
    "objectID": "EDA.html#determine-the-rate-of-missing-values",
    "href": "EDA.html#determine-the-rate-of-missing-values",
    "title": "FinalProjectEDA",
    "section": "Determine The Rate of Missing Values",
    "text": "Determine The Rate of Missing Values\n\n#The `echo: false` option disables the printing of code (only output is displayed).\ndata |&gt;\n  is.na() |&gt;\n  colSums()\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\nThe sums are 0 for each column, so there is no missing data."
  },
  {
    "objectID": "EDA.html#how-the-data-is-stored",
    "href": "EDA.html#how-the-data-is-stored",
    "title": "FinalProjectEDA",
    "section": "How The Data Is Stored",
    "text": "How The Data Is Stored\nWe will check for column type and values.\n\n#readr::spec(data)\nattributes(data)$spec\n\ncols(\n  Diabetes_binary = col_double(),\n  HighBP = col_double(),\n  HighChol = col_double(),\n  CholCheck = col_double(),\n  BMI = col_double(),\n  Smoker = col_double(),\n  Stroke = col_double(),\n  HeartDiseaseorAttack = col_double(),\n  PhysActivity = col_double(),\n  Fruits = col_double(),\n  Veggies = col_double(),\n  HvyAlcoholConsump = col_double(),\n  AnyHealthcare = col_double(),\n  NoDocbcCost = col_double(),\n  GenHlth = col_double(),\n  MentHlth = col_double(),\n  PhysHlth = col_double(),\n  DiffWalk = col_double(),\n  Sex = col_double(),\n  Age = col_double(),\n  Education = col_double(),\n  Income = col_double()\n)"
  },
  {
    "objectID": "EDA.html#basic-data-validation",
    "href": "EDA.html#basic-data-validation",
    "title": "FinalProjectEDA",
    "section": "Basic Data Validation",
    "text": "Basic Data Validation\nSummarize each column to see if there are any unusual values.\n\nsummary(data)\n\n Diabetes_binary      HighBP         HighChol        CholCheck     \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000  \n Median :0.0000   Median :0.000   Median :0.0000   Median :1.0000  \n Mean   :0.1393   Mean   :0.429   Mean   :0.4241   Mean   :0.9627  \n 3rd Qu.:0.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n      BMI            Smoker           Stroke        HeartDiseaseorAttack\n Min.   :12.00   Min.   :0.0000   Min.   :0.00000   Min.   :0.00000     \n 1st Qu.:24.00   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.00000     \n Median :27.00   Median :0.0000   Median :0.00000   Median :0.00000     \n Mean   :28.38   Mean   :0.4432   Mean   :0.04057   Mean   :0.09419     \n 3rd Qu.:31.00   3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:0.00000     \n Max.   :98.00   Max.   :1.0000   Max.   :1.00000   Max.   :1.00000     \n  PhysActivity        Fruits          Veggies       HvyAlcoholConsump\n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   \n 1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000   \n Median :1.0000   Median :1.0000   Median :1.0000   Median :0.0000   \n Mean   :0.7565   Mean   :0.6343   Mean   :0.8114   Mean   :0.0562   \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000   \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   \n AnyHealthcare     NoDocbcCost         GenHlth         MentHlth     \n Min.   :0.0000   Min.   :0.00000   Min.   :1.000   Min.   : 0.000  \n 1st Qu.:1.0000   1st Qu.:0.00000   1st Qu.:2.000   1st Qu.: 0.000  \n Median :1.0000   Median :0.00000   Median :2.000   Median : 0.000  \n Mean   :0.9511   Mean   :0.08418   Mean   :2.511   Mean   : 3.185  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:3.000   3rd Qu.: 2.000  \n Max.   :1.0000   Max.   :1.00000   Max.   :5.000   Max.   :30.000  \n    PhysHlth         DiffWalk           Sex              Age        \n Min.   : 0.000   Min.   :0.0000   Min.   :0.0000   Min.   : 1.000  \n 1st Qu.: 0.000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.: 6.000  \n Median : 0.000   Median :0.0000   Median :0.0000   Median : 8.000  \n Mean   : 4.242   Mean   :0.1682   Mean   :0.4403   Mean   : 8.032  \n 3rd Qu.: 3.000   3rd Qu.:0.0000   3rd Qu.:1.0000   3rd Qu.:10.000  \n Max.   :30.000   Max.   :1.0000   Max.   :1.0000   Max.   :13.000  \n   Education        Income     \n Min.   :1.00   Min.   :1.000  \n 1st Qu.:4.00   1st Qu.:5.000  \n Median :5.00   Median :7.000  \n Mean   :5.05   Mean   :6.054  \n 3rd Qu.:6.00   3rd Qu.:8.000  \n Max.   :6.00   Max.   :8.000  \n\n\nIt appears that BMI is given as a percentile (otherwise, 98 would be quite high). We have a number of categorical variables that would be good to convert to factors.\n\ndata &lt;- data |&gt;\n  mutate(Diabetes_binary=\n           factor(Diabetes_binary,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no diabetes\",\"prediabetes or diabetes\")),\n         HighBP=\n           factor(HighBP,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high BP\",\"high BP\")),\n         HighChol=\n           factor(HighChol,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high cholesterol\",\"high cholesterol\")),\n         CholCheck=\n           factor(CholCheck,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no cholesterol check in 5 years\",\"yes cholesterol check in 5 years\")),\n         #BMI=factor(BMI),\n         Smoker=\n           factor(Smoker,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Stroke=\n           factor(Stroke,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HeartDiseaseorAttack=\n           factor(HeartDiseaseorAttack,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         PhysActivity=\n           factor(PhysActivity,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Fruits=\n           factor(Fruits,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Veggies=\n           factor(Veggies,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HvyAlcoholConsump=\n           factor(HvyAlcoholConsump,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         AnyHealthcare=\n           factor(AnyHealthcare,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         NoDocbcCost=\n           factor(NoDocbcCost,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         GenHlth=\n           factor(GenHlth,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\"),\n                  labels=c(\"excellent\",\"very good\",\"good\",\"fair\",\"poor\")),\n         #MentHlth=\n           #factor(MentHlth),\n         #PhysHlth=\n           #factor(PhysHlth),\n         DiffWalk=\n           factor(DiffWalk,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no difficulty walking\",\"yes difficulty walking\")),\n         Sex=\n           factor(Sex,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"female\",\"male\")),\n         Age=\n           factor(Age,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"),\n                  labels=c(\"18 to 24\",\"25 to 29\",\"30 to 34\",\"35 to 39\",\"40 to 44\",\"45 to 49\",\"50 to 54\",\"55 to 59\",\"60 to 64\",\"65 to 69\",\"70 to 74\",\"75 to 79\",\"80 or older\")),\n         Education=\n           factor(Education,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"),\n                  labels=c(\"Never attended school or only kindergarten\",\"Grades 1 through 8 (Elementary)\",\"Grades 9 through 11 (Some high school)\",\"Grade 12 or GED (High school graduate)\",\"College 1 year to 3 years (Some college or technical school)\",\"College 4 years or more (College graduate)\")),\n         Income=\n           factor(Income,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"),\n                  labels=c(\"Less than $10,000\",\"$10,000 to less than $15,000\",\"$15,000 to less than $20,000\",\"$20,000 to less than $25,000\",\"$25,000 to less than $35,000\",\"$35,000 to less than $50,000\",\"$50,000 to less than $75,000\",\"$75,000 or more\"))\n         )"
  },
  {
    "objectID": "EDA.html#clean-up-data-as-needed",
    "href": "EDA.html#clean-up-data-as-needed",
    "title": "FinalProjectEDA",
    "section": "Clean Up Data As Needed",
    "text": "Clean Up Data As Needed"
  },
  {
    "objectID": "EDA.html#investigate-distributions",
    "href": "EDA.html#investigate-distributions",
    "title": "FinalProjectEDA",
    "section": "Investigate Distributions",
    "text": "Investigate Distributions\n\nContingency Tables\nWe will examine one-, two-, and three-way contingency tables. For the one-way contingency table related to the diabetes status of respondents:\n\n#One-way contingency table\ntable(data$Diabetes_binary)\n\n\n            no diabetes prediabetes or diabetes \n                 218334                   35346 \n\n\nFor the two-way contingency tables:\n\n#Two-way contingency tables\ntable(data$Sex,data$Diabetes_binary)\n\n        \n         no diabetes prediabetes or diabetes\n  female      123563                   18411\n  male         94771                   16935\n\ntable(data$Age,data$Diabetes_binary)\n\n             \n              no diabetes prediabetes or diabetes\n  18 to 24           5622                      78\n  25 to 29           7458                     140\n  30 to 34          10809                     314\n  35 to 39          13197                     626\n  40 to 44          15106                    1051\n  45 to 49          18077                    1742\n  50 to 54          23226                    3088\n  55 to 59          26569                    4263\n  60 to 64          27511                    5733\n  65 to 69          25636                    6558\n  70 to 74          18392                    5141\n  75 to 79          12577                    3403\n  80 or older       14154                    3209\n\ntable(data$Education,data$Diabetes_binary)\n\n                                                              \n                                                               no diabetes\n  Never attended school or only kindergarten                           127\n  Grades 1 through 8 (Elementary)                                     2860\n  Grades 9 through 11 (Some high school)                              7182\n  Grade 12 or GED (High school graduate)                             51684\n  College 1 year to 3 years (Some college or technical school)       59556\n  College 4 years or more (College graduate)                         96925\n                                                              \n                                                               prediabetes or diabetes\n  Never attended school or only kindergarten                                        47\n  Grades 1 through 8 (Elementary)                                                 1183\n  Grades 9 through 11 (Some high school)                                          2296\n  Grade 12 or GED (High school graduate)                                         11066\n  College 1 year to 3 years (Some college or technical school)                   10354\n  College 4 years or more (College graduate)                                     10400\n\ntable(data$Income,data$Diabetes_binary)\n\n                              \n                               no diabetes prediabetes or diabetes\n  Less than $10,000                   7428                    2383\n  $10,000 to less than $15,000        8697                    3086\n  $15,000 to less than $20,000       12426                    3568\n  $20,000 to less than $25,000       16081                    4054\n  $25,000 to less than $35,000       21379                    4504\n  $35,000 to less than $50,000       31179                    5291\n  $50,000 to less than $75,000       37954                    5265\n  $75,000 or more                    83190                    7195\n\ntable(data$GenHlth,data$Diabetes_binary)\n\n           \n            no diabetes prediabetes or diabetes\n  excellent       44159                    1140\n  very good       82703                    6381\n  good            62189                   13457\n  fair            21780                    9790\n  poor             7503                    4578\n\ntable(data$Smoker,data$Diabetes_binary)\n\n     \n      no diabetes prediabetes or diabetes\n  no       124228                   17029\n  yes       94106                   18317\n\ntable(data$HvyAlcoholConsump,data$Diabetes_binary)\n\n     \n      no diabetes prediabetes or diabetes\n  no       204910                   34514\n  yes       13424                     832\n\n#table(data$MentHlth,data$Diabetes_binary)\n#table(data$PhysHlth,data$Diabetes_binary)\ntbl &lt;- table(data$DiffWalk,data$Diabetes_binary)\nprop.table(tbl,margin=1)\n\n                        \n                         no diabetes prediabetes or diabetes\n  no difficulty walking    0.8946707               0.1053293\n  yes difficulty walking   0.6925366               0.3074634\n\n\nFor three-way contingency tables:\n\n#Three-way contingency tables\ntbl &lt;- table(data$Age,data$DiffWalk,data$Diabetes_binary)\ntable(data$Smoker,data$HvyAlcoholConsump,data$Diabetes_binary)\n\n, ,  = no diabetes\n\n     \n          no    yes\n  no  119452   4776\n  yes  85458   8648\n\n, ,  = prediabetes or diabetes\n\n     \n          no    yes\n  no   16816    213\n  yes  17698    619\n\n\nWe can get the proportions of non-diabetic people who have difficulty walking, by age bracket:\n\nprop.table(tbl[, , \"no diabetes\"],margin=1)\n\n             \n              no difficulty walking yes difficulty walking\n  18 to 24               0.97954465             0.02045535\n  25 to 29               0.96969697             0.03030303\n  30 to 34               0.96225368             0.03774632\n  35 to 39               0.94779116             0.05220884\n  40 to 44               0.93148418             0.06851582\n  45 to 49               0.90916634             0.09083366\n  50 to 54               0.87707741             0.12292259\n  55 to 59               0.85667507             0.14332493\n  60 to 64               0.84420777             0.15579223\n  65 to 69               0.84338430             0.15661570\n  70 to 74               0.82215094             0.17784906\n  75 to 79               0.77466804             0.22533196\n  80 or older            0.69125336             0.30874664\n\n\nWe can get the proportions of prediabetic or diabetic people who have difficulty walking, by age bracket:\n\nprop.table(tbl[, , \"prediabetes or diabetes\"],margin=1)\n\n             \n              no difficulty walking yes difficulty walking\n  18 to 24               0.91025641             0.08974359\n  25 to 29               0.82857143             0.17142857\n  30 to 34               0.83757962             0.16242038\n  35 to 39               0.80031949             0.19968051\n  40 to 44               0.74119886             0.25880114\n  45 to 49               0.67795637             0.32204363\n  50 to 54               0.64702073             0.35297927\n  55 to 59               0.61459066             0.38540934\n  60 to 64               0.61329147             0.38670853\n  65 to 69               0.62930772             0.37069228\n  70 to 74               0.63314530             0.36685470\n  75 to 79               0.61210696             0.38789304\n  80 or older            0.53443440             0.46556560\n\n\nWe will summarize our numeric variables:\n\nsummary(data |&gt;\n          select(where(is.numeric)))\n\n      BMI           MentHlth         PhysHlth     \n Min.   :12.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:24.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median :27.00   Median : 0.000   Median : 0.000  \n Mean   :28.38   Mean   : 3.185   Mean   : 4.242  \n 3rd Qu.:31.00   3rd Qu.: 2.000   3rd Qu.: 3.000  \n Max.   :98.00   Max.   :30.000   Max.   :30.000  \n\nsummary(data |&gt;\n          filter(Diabetes_binary == \"no diabetes\") |&gt;\n          select(where(is.numeric)))\n\n      BMI           MentHlth         PhysHlth     \n Min.   :12.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:24.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median :27.00   Median : 0.000   Median : 0.000  \n Mean   :27.81   Mean   : 2.978   Mean   : 3.641  \n 3rd Qu.:31.00   3rd Qu.: 2.000   3rd Qu.: 2.000  \n Max.   :98.00   Max.   :30.000   Max.   :30.000  \n\nsummary(data |&gt;\n          filter(Diabetes_binary == \"prediabetes or diabetes\") |&gt;\n          select(where(is.numeric)))\n\n      BMI           MentHlth         PhysHlth     \n Min.   :13.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:27.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median :31.00   Median : 0.000   Median : 1.000  \n Mean   :31.94   Mean   : 4.462   Mean   : 7.954  \n 3rd Qu.:35.00   3rd Qu.: 3.000   3rd Qu.:15.000  \n Max.   :98.00   Max.   :30.000   Max.   :30.000  \n\n\nWe will examine correlations among our numeric variables:\n\ndata |&gt;\n  select(where(is.numeric)) |&gt;\n  cor() |&gt;\n  round(3)\n\n           BMI MentHlth PhysHlth\nBMI      1.000    0.085    0.121\nMentHlth 0.085    1.000    0.354\nPhysHlth 0.121    0.354    1.000\n\ndata |&gt;\n  filter(Diabetes_binary == \"no diabetes\") |&gt;\n  select(where(is.numeric)) |&gt;\n  cor() |&gt;\n  round(3)\n\n           BMI MentHlth PhysHlth\nBMI      1.000    0.065    0.078\nMentHlth 0.065    1.000    0.336\nPhysHlth 0.078    0.336    1.000\n\ndata |&gt;\n  filter(Diabetes_binary == \"prediabetes or diabetes\") |&gt;\n  select(where(is.numeric)) |&gt;\n  cor() |&gt;\n  round(3)\n\n           BMI MentHlth PhysHlth\nBMI      1.000    0.103    0.122\nMentHlth 0.103    1.000    0.391\nPhysHlth 0.122    0.391    1.000\n\n\n\n\nBar Charts & Heatmaps\nWe will look at bar charts and heatmaps relating diabetes status and walking difficulty across different age brackets:\n\nggplot(data, \n       aes(\n         x = Diabetes_binary, fill = DiffWalk)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_discrete(\"DiffWalk\") +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\ndata |&gt; \n  count(Age, DiffWalk, Diabetes_binary) |&gt;  \n  ggplot(aes(x = DiffWalk, y = Diabetes_binary)) +\n  geom_tile(aes(fill = n)) +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\n\nWe will also look for relationships between diabetes status, smoking, and alcohol consumption across age brackets:\n\ndata |&gt; \n  count(Age, Smoker, Diabetes_binary) |&gt;  \n  ggplot(aes(x = Smoker, y = Diabetes_binary)) +\n  geom_tile(aes(fill = n)) +\n  scale_fill_gradientn(colours = c(\"#E69F00\", \"#56B4E9\"), values = c(0,0.3,1)) +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\ndata |&gt; \n  count(Age, HvyAlcoholConsump, Diabetes_binary) |&gt;  \n  ggplot(aes(x = HvyAlcoholConsump, y = Diabetes_binary)) +\n  geom_tile(aes(fill = n)) +\n  scale_fill_gradientn(colours = c(\"#E69F00\", \"#56B4E9\"), values = c(0,0.3,1)) +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\n\n\n\nScatterplots & Histograms For Numeric Variables\nWe will examine the relationship between the number of days of poor mental health (in the past 30 days) and the number of days of physical illness or injury (in the past 30 days):\n\n  ggplot(data |&gt; filter(Age == \"18 to 24\"),\n         aes(\n           x=PhysHlth,y=MentHlth,color=GenHlth)) +\n  geom_point(size=0.01) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nNext, we will examine the relationship of each of these to BMI:\n\nggplot(data,\n         aes(\n           x=BMI,y=PhysHlth)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n  ggplot(data,\n         aes(\n           x=BMI,y=MentHlth)) +\n  geom_point() +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThen, we will examine the distributions of PhysHlth, MentHlth, and BMI based on whether individuals have diabetes.\n\nggplot(data |&gt; filter(PhysHlth &gt; 1 & PhysHlth &lt; 30),\n       aes(\n         x=PhysHlth\n       )) + \n  geom_histogram(alpha=0.5,\n    aes(y=..density..,\n        fill = Diabetes_binary, \n        col=I(\"black\")),\n    position = \"identity\",\n    binwidth=1) + \n  scale_fill_manual(values=c(\"#E69F00\", \"#56B4E9\")) + xlab(\"PhysHlth\") + ylab(\"Count\") + ggtitle(str_wrap(\"Number of Respondents per Number of Days of Physical Illness or Injury, by Presence or Absence of Diabetes\",30)) + theme(plot.title = element_text(hjust = 0.5))\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\n\n\n\n\n\n\nggplot(data |&gt; filter(MentHlth &gt; 1 & MentHlth &lt; 30),\n       aes(\n         x=MentHlth\n       )) + \n  geom_histogram(alpha=0.5,\n    aes(y=..density..,\n        fill = Diabetes_binary, \n        col=I(\"black\")),\n    position = \"identity\",\n    binwidth=1) + \n  scale_fill_manual(values=c(\"#E69F00\", \"#56B4E9\")) + xlab(\"MentHlth\") + ylab(\"Count\") + ggtitle(str_wrap(\"Number of Respondents per Number of Poor Mental Health Days, by Presence or Absence of Diabetes\",30)) + theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data,\n       aes(\n         x=BMI\n       )) + \n  geom_histogram(alpha=0.5,\n    aes(y=..density..,\n        fill = Diabetes_binary, \n        col=I(\"black\")),\n    position = \"identity\",\n    binwidth=1) + \n  scale_fill_manual(values=c(\"#E69F00\", \"#56B4E9\")) + xlab(\"BMI\") + ylab(\"Count\") + ggtitle(str_wrap(\"Number of Respondents per BMI, by Presence or Absence of Diabetes\",30)) + theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data) +\ngeom_boxplot(aes(x = Sex, y = BMI, fill = Diabetes_binary)) + scale_fill_manual(values=c(\"#E69F00\", \"#56B4E9\"))"
  },
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "Modeling",
    "section": "",
    "text": "Write an intro! We will include (at least) 5 predictors in this model: age, sex, income, smoker, and heart disease or attack.\nWe will load the libraries and read in the data here:\n\nlibrary(baguette)\n\nLoading required package: parsnip\n\nlibrary(corrplot)\n\ncorrplot 0.95 loaded\n\nlibrary(ggplot2)\nlibrary(glmnet)\n\nLoading required package: Matrix\n\n\nLoaded glmnet 4.1-8\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(ranger)\n#library(randomForest)\nlibrary(stringr)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.6     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tibble       3.2.1\n✔ dplyr        1.1.4     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ purrr        1.0.2     ✔ workflowsets 1.1.0\n✔ recipes      1.1.0     ✔ yardstick    1.3.1\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard()  masks scales::discard()\n✖ tidyr::expand()   masks Matrix::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ tidyr::pack()     masks Matrix::pack()\n✖ recipes::step()   masks stats::step()\n✖ tidyr::unpack()   masks Matrix::unpack()\n✖ recipes::update() masks Matrix::update(), stats::update()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ readr   2.1.5\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ tidyr::expand()     masks Matrix::expand()\n✖ dplyr::filter()     masks stats::filter()\n✖ recipes::fixed()    masks stringr::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ tidyr::pack()       masks Matrix::pack()\n✖ readr::spec()       masks yardstick::spec()\n✖ tidyr::unpack()     masks Matrix::unpack()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(vip)\n\n\nAttaching package: 'vip'\n\nThe following object is masked from 'package:utils':\n\n    vi\n\n#diabetes_binary_health_indicators_BRFSS2015.csv\n#dbhi = diabetes binary health indicators\ndbhi_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndbhi_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nNext, we will convert variables to factor variables, where appropriate:\n\ndbhi_data &lt;- dbhi_data |&gt;\n  mutate(Diabetes_binary=\n           factor(Diabetes_binary,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no diabetes\",\"prediabetes or diabetes\")),\n         HighBP=\n           factor(HighBP,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high BP\",\"high BP\")),\n         HighChol=\n           factor(HighChol,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high cholesterol\",\"high cholesterol\")),\n         CholCheck=\n           factor(CholCheck,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no cholesterol check in 5 years\",\"yes cholesterol check in 5 years\")),\n         #BMI=factor(BMI),\n         Smoker=\n           factor(Smoker,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Stroke=\n           factor(Stroke,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HeartDiseaseorAttack=\n           factor(HeartDiseaseorAttack,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         PhysActivity=\n           factor(PhysActivity,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Fruits=\n           factor(Fruits,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Veggies=\n           factor(Veggies,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HvyAlcoholConsump=\n           factor(HvyAlcoholConsump,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         AnyHealthcare=\n           factor(AnyHealthcare,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         NoDocbcCost=\n           factor(NoDocbcCost,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         GenHlth=\n           factor(GenHlth,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\"),\n                  labels=c(\"excellent\",\"very good\",\"good\",\"fair\",\"poor\")),\n         #MentHlth=\n           #factor(MentHlth),\n         #PhysHlth=\n           #factor(PhysHlth),\n         DiffWalk=\n           factor(DiffWalk,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no difficulty walking\",\"yes difficulty walking\")),\n         Sex=\n           factor(Sex,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"female\",\"male\")),\n         Age=\n           factor(Age,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"),\n                  labels=c(\"18 to 24\",\"25 to 29\",\"30 to 34\",\"35 to 39\",\"40 to 44\",\"45 to 49\",\"50 to 54\",\"55 to 59\",\"60 to 64\",\"65 to 69\",\"70 to 74\",\"75 to 79\",\"80 or older\")),\n         Education=\n           factor(Education,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"),\n                  labels=c(\"Never attended school or only kindergarten\",\"Grades 1 through 8 (Elementary)\",\"Grades 9 through 11 (Some high school)\",\"Grade 12 or GED (High school graduate)\",\"College 1 year to 3 years (Some college or technical school)\",\"College 4 years or more (College graduate)\")),\n         Income=\n           factor(Income,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"),\n                  labels=c(\"Less than $10,000\",\"$10,000 to less than $15,000\",\"$15,000 to less than $20,000\",\"$20,000 to less than $25,000\",\"$25,000 to less than $35,000\",\"$35,000 to less than $50,000\",\"$50,000 to less than $75,000\",\"$75,000 or more\"))\n         )"
  },
  {
    "objectID": "Modeling.html#introduction",
    "href": "Modeling.html#introduction",
    "title": "Modeling",
    "section": "",
    "text": "Write an intro! We will include (at least) 5 predictors in this model: age, sex, income, smoker, and heart disease or attack.\nWe will load the libraries and read in the data here:\n\nlibrary(baguette)\n\nLoading required package: parsnip\n\nlibrary(corrplot)\n\ncorrplot 0.95 loaded\n\nlibrary(ggplot2)\nlibrary(glmnet)\n\nLoading required package: Matrix\n\n\nLoaded glmnet 4.1-8\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(ranger)\n#library(randomForest)\nlibrary(stringr)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.6     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tibble       3.2.1\n✔ dplyr        1.1.4     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ purrr        1.0.2     ✔ workflowsets 1.1.0\n✔ recipes      1.1.0     ✔ yardstick    1.3.1\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard()  masks scales::discard()\n✖ tidyr::expand()   masks Matrix::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ tidyr::pack()     masks Matrix::pack()\n✖ recipes::step()   masks stats::step()\n✖ tidyr::unpack()   masks Matrix::unpack()\n✖ recipes::update() masks Matrix::update(), stats::update()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ readr   2.1.5\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ tidyr::expand()     masks Matrix::expand()\n✖ dplyr::filter()     masks stats::filter()\n✖ recipes::fixed()    masks stringr::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ tidyr::pack()       masks Matrix::pack()\n✖ readr::spec()       masks yardstick::spec()\n✖ tidyr::unpack()     masks Matrix::unpack()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(vip)\n\n\nAttaching package: 'vip'\n\nThe following object is masked from 'package:utils':\n\n    vi\n\n#diabetes_binary_health_indicators_BRFSS2015.csv\n#dbhi = diabetes binary health indicators\ndbhi_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndbhi_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1               0      1        1         1    40      1      0\n 2               0      0        0         0    25      1      0\n 3               0      1        1         1    28      0      0\n 4               0      1        0         1    27      0      0\n 5               0      1        1         1    24      0      0\n 6               0      1        1         1    25      1      0\n 7               0      1        0         1    30      1      0\n 8               0      1        1         1    25      1      0\n 9               1      1        1         1    30      1      0\n10               0      0        0         1    24      0      0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nNext, we will convert variables to factor variables, where appropriate:\n\ndbhi_data &lt;- dbhi_data |&gt;\n  mutate(Diabetes_binary=\n           factor(Diabetes_binary,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no diabetes\",\"prediabetes or diabetes\")),\n         HighBP=\n           factor(HighBP,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high BP\",\"high BP\")),\n         HighChol=\n           factor(HighChol,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no high cholesterol\",\"high cholesterol\")),\n         CholCheck=\n           factor(CholCheck,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no cholesterol check in 5 years\",\"yes cholesterol check in 5 years\")),\n         #BMI=factor(BMI),\n         Smoker=\n           factor(Smoker,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Stroke=\n           factor(Stroke,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HeartDiseaseorAttack=\n           factor(HeartDiseaseorAttack,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         PhysActivity=\n           factor(PhysActivity,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Fruits=\n           factor(Fruits,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         Veggies=\n           factor(Veggies,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         HvyAlcoholConsump=\n           factor(HvyAlcoholConsump,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         AnyHealthcare=\n           factor(AnyHealthcare,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         NoDocbcCost=\n           factor(NoDocbcCost,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no\",\"yes\")),\n         GenHlth=\n           factor(GenHlth,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\"),\n                  labels=c(\"excellent\",\"very good\",\"good\",\"fair\",\"poor\")),\n         #MentHlth=\n           #factor(MentHlth),\n         #PhysHlth=\n           #factor(PhysHlth),\n         DiffWalk=\n           factor(DiffWalk,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"no difficulty walking\",\"yes difficulty walking\")),\n         Sex=\n           factor(Sex,\n                  levels=c(\"0\",\"1\"),\n                  labels=c(\"female\",\"male\")),\n         Age=\n           factor(Age,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"),\n                  labels=c(\"18 to 24\",\"25 to 29\",\"30 to 34\",\"35 to 39\",\"40 to 44\",\"45 to 49\",\"50 to 54\",\"55 to 59\",\"60 to 64\",\"65 to 69\",\"70 to 74\",\"75 to 79\",\"80 or older\")),\n         Education=\n           factor(Education,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"),\n                  labels=c(\"Never attended school or only kindergarten\",\"Grades 1 through 8 (Elementary)\",\"Grades 9 through 11 (Some high school)\",\"Grade 12 or GED (High school graduate)\",\"College 1 year to 3 years (Some college or technical school)\",\"College 4 years or more (College graduate)\")),\n         Income=\n           factor(Income,\n                  levels=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"),\n                  labels=c(\"Less than $10,000\",\"$10,000 to less than $15,000\",\"$15,000 to less than $20,000\",\"$20,000 to less than $25,000\",\"$25,000 to less than $35,000\",\"$35,000 to less than $50,000\",\"$50,000 to less than $75,000\",\"$75,000 or more\"))\n         )"
  },
  {
    "objectID": "Modeling.html#split-the-data",
    "href": "Modeling.html#split-the-data",
    "title": "Modeling",
    "section": "Split the Data",
    "text": "Split the Data\nSet the seed. Then, use functions from tidymodels to split the data into a training and test set (70/30 split). Then, use the strata argument to stratify the split on the Seasons variable.\n\nset.seed(11)\ndbhi_split &lt;- initial_split(dbhi_data, prop = 0.70) #strata = argument goes in the parentheses, if needed\ndbhi_train &lt;- training(dbhi_split)\ndbhi_test &lt;- testing(dbhi_split)\n\nWe will perform 5-fold cross validation:\n\ndbhi_5_fold &lt;- vfold_cv(dbhi_train, 5)"
  },
  {
    "objectID": "Modeling.html#models",
    "href": "Modeling.html#models",
    "title": "Modeling",
    "section": "Models",
    "text": "Models\nWe will consider two kinds of models: classification tree and random forest. We will …\nGet a recipe. Use the date variable to create a weekday/weekend factor variable. Then, standardize the numeric variables since their scales are pretty different. Finally, create dummy variables for the seasons, holiday, and new day type variable.\n\ndbhi_recipe &lt;- recipe(Diabetes_binary ~ ., data = dbhi_train) |&gt;\n  summary()\n#  prep(training = dbhi_train) |&gt;\n#  bake(dbhi_train)\n\ndbhi_recipe\n\n# A tibble: 22 × 4\n   variable             type      role      source  \n   &lt;chr&gt;                &lt;list&gt;    &lt;chr&gt;     &lt;chr&gt;   \n 1 HighBP               &lt;chr [3]&gt; predictor original\n 2 HighChol             &lt;chr [3]&gt; predictor original\n 3 CholCheck            &lt;chr [3]&gt; predictor original\n 4 BMI                  &lt;chr [2]&gt; predictor original\n 5 Smoker               &lt;chr [3]&gt; predictor original\n 6 Stroke               &lt;chr [3]&gt; predictor original\n 7 HeartDiseaseorAttack &lt;chr [3]&gt; predictor original\n 8 PhysActivity         &lt;chr [3]&gt; predictor original\n 9 Fruits               &lt;chr [3]&gt; predictor original\n10 Veggies              &lt;chr [3]&gt; predictor original\n# ℹ 12 more rows\n\n\n\nClassification Tree\nYou should provide a thorough explanation of what a classification tree model is. Then you should fit a classification tree with varying values for the complexity parameter and choose the best model (based on 5 fold CV on the training set). Include at least 5 predictors in this model.\n\n\nRandom Forest\nYou should provide a thorough explanation of what a random forest is and why we might use it (be sure to relate this to a basic classification tree). You should then fit a random forest model with varying values for the mtry parameter and choose the best model (based on 5 fold CV on the training set). Include at least 5 predictors in this model."
  },
  {
    "objectID": "Modeling.html#final-model-selection",
    "href": "Modeling.html#final-model-selection",
    "title": "Modeling",
    "section": "Final Model Selection",
    "text": "Final Model Selection\nWe will compare the best models from each of the approaches on the test set and declare an overall winner:"
  }
]